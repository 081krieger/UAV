
PhaseCorrectPWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a5c  00000000  00000000  00000138  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000072c  00000000  00000000  00000b94  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .comment      00000011  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <initT1PhaseCorrectPWM>:
// phase correct PWM mode
// 8 bit
// top at 0xFF
// prescaler = 64
// clear to zero after reaching board
void initT1PhaseCorrectPWM(void) {
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
    TCCR1A |= (1 << COM1A1) | (1 << COM1B1) | (1 << WGM10);
  74:	8f e4       	ldi	r24, 0x4F	; 79
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	2f e4       	ldi	r18, 0x4F	; 79
  7a:	30 e0       	ldi	r19, 0x00	; 0
  7c:	f9 01       	movw	r30, r18
  7e:	20 81       	ld	r18, Z
  80:	21 6a       	ori	r18, 0xA1	; 161
  82:	fc 01       	movw	r30, r24
  84:	20 83       	st	Z, r18
    TCCR1B |= (1 << CS11) | (1 << CS10);
  86:	8e e4       	ldi	r24, 0x4E	; 78
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	2e e4       	ldi	r18, 0x4E	; 78
  8c:	30 e0       	ldi	r19, 0x00	; 0
  8e:	f9 01       	movw	r30, r18
  90:	20 81       	ld	r18, Z
  92:	23 60       	ori	r18, 0x03	; 3
  94:	fc 01       	movw	r30, r24
  96:	20 83       	st	Z, r18
} // PWM frequency is now 490 Hz
  98:	df 91       	pop	r29
  9a:	cf 91       	pop	r28
  9c:	08 95       	ret

0000009e <initPorts>:

// put OC1A and OC1B pins as output
void initPorts(void) {
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
    DDRB |= (1 << PB1) | (1 << PB2);
  a6:	87 e3       	ldi	r24, 0x37	; 55
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	27 e3       	ldi	r18, 0x37	; 55
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	f9 01       	movw	r30, r18
  b0:	20 81       	ld	r18, Z
  b2:	26 60       	ori	r18, 0x06	; 6
  b4:	fc 01       	movw	r30, r24
  b6:	20 83       	st	Z, r18
}
  b8:	df 91       	pop	r29
  ba:	cf 91       	pop	r28
  bc:	08 95       	ret

000000be <main>:

int main() {
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
    initPorts();
  c6:	0e 94 4f 00 	call	0x9e	; 0x9e <initPorts>
    initT1PhaseCorrectPWM();
  ca:	0e 94 36 00 	call	0x6c	; 0x6c <initT1PhaseCorrectPWM>

    while(1) {
        OCR1A = ENGINE_MIN_TICS;
  ce:	8a e4       	ldi	r24, 0x4A	; 74
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	27 e7       	ldi	r18, 0x77	; 119
  d4:	30 e0       	ldi	r19, 0x00	; 0
  d6:	fc 01       	movw	r30, r24
  d8:	31 83       	std	Z+1, r19	; 0x01
  da:	20 83       	st	Z, r18
    }
  dc:	f8 cf       	rjmp	.-16     	; 0xce <main+0x10>

000000de <_exit>:
  de:	f8 94       	cli

000000e0 <__stop_program>:
  e0:	ff cf       	rjmp	.-2      	; 0xe0 <__stop_program>
